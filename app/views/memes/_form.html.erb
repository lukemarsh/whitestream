<canvas id="memecanvas">
  Sorry, canvas not supported
</canvas>
<img src='/assets/1148990_10151516396361277_1514704461_n.jpg' style='display:none' class='mfnotransform' id='default-image' crossorigin="anonymous" />

<div class="field">
  <%= file_field(:meme, :image) %>
  <input type='text' value='enter some text' id='custom-text' onkeyup='doTransform()' oninput='doTransform' onpaste='doTransform' />
</div>
<div class="actions">
  <input type="submit" id="download">
</div>

<script>
  var canvas;
  var canvasWidth;
  var ctx;
  var x;
  var y;
  var download;
  var data;
  var fileInput;
  var img;


  window.onload = function() {
    prepareExample();
  }

  function dataURLtoBlob(dataURL) {

    // Decode the dataURL
    var binary = atob(dataURL.split(',')[1]);

    // Create 8-bit unsigned array
    var array = [];
    for(var i = 0; i < binary.length; i++) {
      array.push(binary.charCodeAt(i));
    }

    // Return our Blob object
    return new Blob([new Uint8Array(array)], {type: 'image/png'});
  }

  function prepareExample() {
    img = document.getElementById('default-image');

    var deviceWidth = window.innerWidth;;
    canvasWidth = Math.min(600, deviceWidth-20);
    canvasHeight = Math.min(480, deviceWidth-20);
    canvas = document.getElementById('memecanvas');


    canvas.width = canvasWidth;
    canvas.height = canvasHeight;
    ctx = canvas.getContext('2d');

    x = canvas.width/2 - img.width/2;
    y = canvas.height/2 - img.height/2;

    ctx.drawImage(img, x, y);

    ctx.textAlign = 'center';
    ctx.lineWidth  = 4;
    ctx.font = '20pt impact';
    ctx.strokeStyle = 'black';
    ctx.fillStyle = 'white';
    doTransform();


    fileInput = document.getElementById('meme_image');

    fileInput.addEventListener('change', function(e) {
      var reader = new FileReader();
      reader.onload = function(event){

        img.onload = function(){
          ctx.clearRect(0, 0, canvas.width, canvas.height);
          x = canvas.width/2 - img.width/2;
          y = canvas.height/2 - img.height/2;
          ctx.drawImage(img,x,y);
        }
        img.src = reader.result;
      }
      reader.readAsDataURL(fileInput.files[0]);

    }, false);

    var save = document.getElementById('download');
    save.addEventListener('click', function(e) {

      var data = canvas.toDataURL("image/png;base64;");
      var file = dataURLtoBlob(data);
      var fd = new FormData();
      fd.append("image", file);

      request = $.ajax({
        url: '/memes',
        type: "POST",
        dataType: "JSON",
        data: fd,
        processData: false,
        contentType: false
      });

      request.done(function (response, textStatus, jqXHR){
        window.location.href = '/memes/'+response.id;
      });
    }, false);

    ctx.textAlign = 'center';
    ctx.lineWidth  = 4;
    ctx.font = '20pt impact';
    ctx.strokeStyle = 'black';
    ctx.fillStyle = 'white';

  }

  function doTransform() {
    ctx.save();
    ctx.clearRect(0, 0, canvas.width, canvas.height);

    ctx.translate(canvas.width/2, canvas.height/2);

    ctx.translate(-canvas.width/2, -canvas.height/2);

    ctx.drawImage(img, x, y);

    ctx.restore();

    text = document.getElementById('custom-text').value;
    text = text.toUpperCase();
    wrapText(ctx, text, canvas.width/2, canvas.height - canvas.height/4.5, canvasWidth-canvasWidth/3, 30);
  }

  function wrapText(ctx, text, x, y, maxWidth, lineHeight) {
    var words = text.split(' ');
    var line = '';

    for(var n = 0; n < words.length; n++) {
      var testLine = line + words[n] + ' ';
      var metrics = ctx.measureText(testLine);
      var testWidth = metrics.width;
      if (testWidth > maxWidth && n > 0) {
        ctx.strokeText(line, x, y);
        ctx.fillText(line, x, y);
        line = words[n] + ' ';
        y += lineHeight;
      }
      else {
        line = testLine;
      }
    }
    ctx.strokeText(line, x, y);
    ctx.fillText(line, x, y);
  }
</script>